namespace DiagramaCuicularaAlgoritmMonteCarlo
{
    public partial class Form1 : Form
    {
        private float currentAngle = 0;
        private bool isSpinning = false;
        private System.Windows.Forms.Timer timer = new System.Windows.Forms.Timer();

        public Form1()
        {
            InitializeComponent();
            timer.Interval = 100; // Set the timer interval in milliseconds
            timer.Tick += timer1_Tick;
        }

        private void panel1_Paint(object sender, PaintEventArgs e)
        {
            Graphics g = e.Graphics;
            int centerX = panel1.Width / 2;
            int centerY = panel1.Height / 2;
            int radius = Math.Min(panel1.Width, panel1.Height) / 3;

            int[] proportions = { 2, 7, 1, 2, 5, 6 };

            int sumaProportii = 0;

            foreach (var proportie in proportions)
            {
                sumaProportii += proportie;
            }

            Color[] colors = new Color[]
            {
                Color.Red,//0
                Color.Green,//1
                Color.Blue,//2
                Color.Orange,//3
                Color.Purple,//4
                Color.Brown,//5
                Color.Magenta,//6
                Color.Cyan,//7
                Color.Gray,//8
                Color.Yellow//9
            };

            Pen[] pens = new Pen[colors.Length];

            for (int i = 0; i < colors.Length; i++)
            {
                pens[i] = new Pen(colors[i], 2);

            }

            float[] angles = new float[proportions.Length];

            float startAngle = currentAngle;

            for (int i = 0; i < proportions.Length; i++)
            {
                angles[i] = (float)(360 * proportions[i] / (float)sumaProportii);
                float sweepAngle = angles[i];

                g.FillPie(new SolidBrush(colors[proportions[i]]), centerX - radius, centerY - radius, 2 * radius, 2 * radius, startAngle, sweepAngle);

                g.DrawPie(new Pen(Color.Black, 2), centerX - radius, centerY - radius, 2 * radius, 2 * radius, startAngle, sweepAngle);
                startAngle += sweepAngle;

            }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            if (isSpinning)
            {
                // Stop the spinning animation
                timer.Stop();
                isSpinning = false;
            }
            else
            {
                // Start the spinning animation
                timer.Start();
                isSpinning = true;
            }
        }

        private void timer1_Tick(object sender, EventArgs e)
        {
            // Update the current angle and refresh the form to trigger the Paint event
            currentAngle += 5; // Adjust the rotation speed
            if (currentAngle >= 360)
            {
                currentAngle = 0; // Reset to 0 when one full rotation is completed
            }

            panel1.Invalidate(); // Force a repaint
        }
    }
}